<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>echarts-demo</title>
    <script src="https://www.zhenglinglu.cn/zllstaticfile/echarts/vue.min.js"></script>
    <script src="https://www.zhenglinglu.cn/zllstaticfile/echarts/echarts.min.js"></script>
    <style>
        html,
        body,
        #main,
        .charts {
            padding: 0px;
            margin: 0px;
            width: 100%;
            height: 100%;
        }
    </style>
</head>

<body>
    <div id="main">
        <div ref="dom" class="charts"></div>
    </div>
    <script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        new Vue({
            el: '#main',
            data: {
                dom: null
            },
            mounted() {
                this.$nextTick(() => {
                    let init = this.$refs.dom, _this = this;
                    this.dom = echarts.init(init);
                    this.dom.showLoading();//显示loading
                    // 模拟后端返回的数据
                    let data = {
                        xAxis: ['2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'],
                        series: [
                            {
                                name: '邮件营销',
                                data: [400, 400, 300, 300, 300, 400, 400, 400, 300]
                            },
                            {
                                name: '联盟广告',
                                data: [400, 500, 500, 500, 500, 400, 400, 500, 500]
                            },
                            {
                                name: '视频广告',
                                data: [400, 600, 700, 700, 1000, 400, 400, 600, 700]
                            }
                        ]
                    };

                    //前端根据自己的业务需求进行相应的数据处理  
                    let color = [['#eee', '#eee'], ['#8bd46e', '#09bcb7'], ['#248ff7', '#6851f1']];
                    data.series.forEach((item, index) => {
                        item.type = 'bar';
                        item.barWidth = '15%';
                        item.itemStyle = {
                            normal: {
                                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                    offset: 0,
                                    color: color[index][0]
                                }, {
                                    offset: 1,
                                    color: color[index][1]
                                }]),
                                barBorderRadius: 12,
                            },
                        }
                    });
                    data.legend = data.legend ? data.legend : '';

                    //初始化
                    let option = {
                        // backgroundColor: '#fff',
                        tooltip: {
                            trigger: 'axis',
                            axisPointer: { // 坐标轴指示器，坐标轴触发有效
                                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                            }
                        },
                        grid: {
                            left: '2%',
                            right: '4%',
                            bottom: '14%',
                            top: '16%',
                            containLabel: true
                        },
                        legend: {
                            data: data.legend,
                            top: '8%',
                            textStyle: {
                                color: "#999"
                            },
                            itemWidth: 12,
                            itemHeight: 10,
                            // itemGap: 35
                        },
                        toolbox: {
                            show: true,
                            feature: {
                                dataZoom: {
                                    yAxisIndex: 'none'
                                },
                                dataView: { readOnly: false },
                                magicType: { type: ['line', 'bar'] },
                                restore: {},
                                saveAsImage: {}
                            }
                        },
                        xAxis: {
                            type: 'category',
                            data: data.xAxis,
                            axisLine: {
                                lineStyle: {
                                    color: '#999'

                                }
                            },
                            axisLabel: {
                                textStyle: {
                                    fontFamily: 'Microsoft YaHei'
                                }
                            },
                        },

                        yAxis: {
                            type: 'value',
                            max: '1200',
                            axisLine: {
                                show: false,
                                lineStyle: {
                                    color: '#999'
                                }
                            },
                            splitLine: {
                                show: true,
                                lineStyle: {
                                    color: '#999'
                                }
                            },
                            axisLabel: {}
                        },
                        "dataZoom": [{
                            "show": true,
                            "height": 12,
                            "xAxisIndex": [
                                0
                            ],
                            bottom: '8%',
                            "start": 10,
                            "end": 90,
                            handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',
                            handleSize: '110%',
                            handleStyle: {
                                color: "#d3dee5",

                            },
                            textStyle: {
                                color: "#000"
                            },
                            borderColor: "#eee"
                        }, {
                            "type": "inside",
                            "show": true,
                            "height": 15,
                            "start": 1,
                            "end": 35
                        }],
                        series: data.series
                    };

                    let app = {
                        currentIndex: -1,
                    };
                    setInterval(function () {
                        let dataLen = option.series[0].data.length;

                        // 取消之前高亮的图形
                        myChart.dispatchAction({
                            type: 'downplay',
                            seriesIndex: 0,
                            dataIndex: app.currentIndex
                        });
                        app.currentIndex = (app.currentIndex + 1) % dataLen;
                        //console.log(app.currentIndex);
                        // 高亮当前图形
                        myChart.dispatchAction({
                            type: 'highlight',
                            seriesIndex: 0,
                            dataIndex: app.currentIndex,
                        });
                        // 显示 tooltip
                        myChart.dispatchAction({
                            type: 'showTip',
                            seriesIndex: 0,
                            dataIndex: app.currentIndex
                        });
                    }, 1000);
                    this.dom.setOption(option);
                    this.dom.hideLoading();
                    window.onresize = function () {
                        _this.dom.resize({
                            width: init.innerWidth,
                            height: init.innerHeight
                        });
                    };
                })
            }
        })
    </script>
</body>

</html>